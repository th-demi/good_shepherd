Project Directory Structure (excluding .next, node_modules, .git, .DS_Store, .gitignore):
./
├── README.md
├── code_snapshot.sh*
├── components.json
├── jsconfig.json
├── next.config.mjs
├── package.json
├── pnpm-lock.yaml
├── postcss.config.mjs
├── project_code.txt
├── public/
│   ├── Alexis-Ffrench-100.jpg
│   ├── Evelyn-Glennie-Headshot.jpg
│   ├── GSIM_bg_video.mp4
│   ├── GSIM_logo.png
│   ├── GSIM_only_logo.png
│   ├── Jacob-Collier-Headshot.jpg
│   ├── Naarah-A-World-of-Opportunity-Comes-Closer_2024-10-09-140523_hwuv.jpg
│   ├── RATTLE-Simon-Oliver-Helbig_2023-09-27-115006_pplb.jpg
│   ├── Recital.png
│   ├── chloeflower-officialheadshot_720.jpg
│   ├── concert_girl.jpeg
│   ├── events/
│   │   ├── recital_gathering.jpg
│   │   ├── recital_orchestration.jpg
│   │   ├── recital_picture.jpg
│   │   ├── recital_practice.jpg
│   │   └── recital_violins.jpg
│   ├── file.svg
│   ├── globe.svg
│   ├── gsim-broucher.pdf
│   ├── kid_piano.JPG
│   ├── logo-crest-2x.png
│   ├── logo-simple-2x.png
│   ├── logo-top-2x.png
│   ├── logo-wide-2x.png
│   ├── next.svg
│   ├── student-life-strings.jpeg
│   ├── vercel.svg
│   └── window.svg
├── src/
│   ├── app/
│   │   ├── components/
│   │   │   ├── AcademyGuideBlock.jsx
│   │   │   ├── ActiveSlider.jsx
│   │   │   ├── AdmissionsBlock.jsx
│   │   │   ├── AlumniBlock.jsx
│   │   │   ├── EventCarousel.jsx
│   │   │   ├── FooterBottom.jsx
│   │   │   ├── FooterTop.jsx
│   │   │   ├── FutureOfMusicBlock.jsx
│   │   │   ├── Header.jsx
│   │   │   ├── Icons.jsx
│   │   │   ├── IntroKeylineBlock.jsx
│   │   │   ├── MainNavigation.jsx
│   │   │   ├── MusicRegistrationForm.jsx
│   │   │   ├── RecitalBlock.jsx
│   │   │   ├── ScholorshipBlock.jsx
│   │   │   ├── StudentLifeBlock.jsx
│   │   │   └── TeachersandtutorsBlock.jsx
│   │   ├── favicon.ico
│   │   ├── fonts/
│   │   │   ├── GeistMonoVF.woff
│   │   │   └── GeistVF.woff
│   │   ├── globals.css
│   │   ├── layout.js
│   │   └── page.js
│   ├── components/
│   │   └── ui/
│   │       ├── button.jsx
│   │       ├── form.jsx
│   │       ├── input.jsx
│   │       ├── label.jsx
│   │       ├── phone-input.jsx
│   │       └── select.jsx
│   ├── lib/
│   │   └── utils.js
│   └── pages/
│       └── api/
│           └── register.js
└── tailwind.config.js


==== Code Files ====


==== File: ./src/app/layout.js ====
import localFont from "next/font/local";
import "./globals.css";
import Head from "next/head";  // Import Head from next/head
import React from "react";
import { Toaster } from "sonner"

export const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});

export const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({ children }) {
  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        {/* <React.StrictMode>{children}</React.StrictMode> */}
        {children}
        <Toaster />
      </body>
    </html>
  );
}



==== File: ./src/app/page.js ====
// pages/index.js
import Header from "./components/Header";
import MainNavigation from "./components/MainNavigation";
import IntroKeylineBlock from "./components/IntroKeylineBlock";
import RecitalBlock from "./components/RecitalBlock";
import AcademyGuideBlock from "./components/AcademyGuideBlock";
import AdmissionsBlock from "./components/AdmissionsBlock";
import ScholarshipBlock from "./components/ScholorshipBlock";
import TeachersandtutorsBlock from "./components/TeachersandtutorsBlock";
import FutureOfMusicBlock from "./components/FutureOfMusicBlock";
import StudentLifeBlock from "./components/StudentLifeBlock";
import AlumniBlock from "./components/AlumniBlock";
import FooterTop from "./components/FooterTop";
import FooterBottom from "./components/FooterBottom";
export default function Home() {
  return (
    <div>
      <div className="relative z-9999">
        <MainNavigation />
        <Header />
      </div>
      <main className="box-border">
        <IntroKeylineBlock />
        <AcademyGuideBlock />
        <RecitalBlock />
        <ScholarshipBlock />
        <TeachersandtutorsBlock />
        <AdmissionsBlock />
        {/*<FutureOfMusicBlock />*/}
        <FooterTop />
        <FooterBottom />
      </main>
      <footer>

      </footer>
    </div>
    // Audition to admission
    //
    // scholarships to International exam boards (scroll logos of 4 schools, anchor to new page for details) registered exam centres of RSL and MTB(highlighted)
    // Artisitic excellence - genral tutors info
  );
}


==== File: ./src/app/components/Header.jsx ====
export default function Header() {
    return (
      <header className="relative w-full h-screen">
        <video playsInline autoPlay muted loop aria-hidden="true" className="object-cover w-full h-full z-0">
          <source src="/GSIM_bg_video.mp4" type="video/mp4" />
        </video>
      </header>
    );
  }

// id = "layer-site" = main navbar
// id = "layer-nav" = options
// class = "headder search" = search bar


==== File: ./src/app/components/Icons.jsx ====
// components/Icons.js

export const LoginIcon = () => (
  <svg width="16" height="17" viewBox="0 0 16 17" fill="none" xmlns="http://www.w3.org/2000/svg" className="icon icon--login icon--svg">
    <path d="M8.29183 7.66667C10.1328 7.66667 11.6252 6.17428 11.6252 4.33333C11.6252 2.49238 10.1328 1 8.29183 1C6.45088 1 4.9585 2.49238 4.9585 4.33333C4.9585 6.17428 6.45088 7.66667 8.29183 7.66667Z" stroke="#FFF" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="login-top" style={{ opacity: 1, strokeDashoffset: '0px' }} strokeDasharray="20.946958541870117"></path>
    <path d="M14.9583 16V14.3333C14.9583 13.4493 14.6071 12.6014 13.982 11.9763C13.3569 11.3512 12.5091 11 11.625 11H4.95833C4.07428 11 3.22643 11.3512 2.60131 11.9763C1.97619 12.6014 1.625 13.4493 1.625 14.3333V16" stroke="#FFF" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="login-bottom" style={{ opacity: 1, strokeDashoffset: '0px' }} strokeDasharray="20.471994400024414"></path>
  </svg>
);

export const BasketIcon = () => (
  <svg width="19" height="19" viewBox="0 0 19 19" fill="none" xmlns="http://www.w3.org/2000/svg" className="icon icon--basket icon--svg">
    <path fillRule="evenodd" clipRule="evenodd" d="M3.16683 7.12509H4.74999C4.75022 7.41527 4.91057 7.69457 5.18778 7.83318C5.57885 8.02871 6.05438 7.8702 6.24992 7.47914L6.42694 7.12509H12.5734L12.7504 7.47914C12.9459 7.8702 13.4215 8.02871 13.8125 7.83318C14.0898 7.69457 14.2501 7.41527 14.2503 7.12509H15.8335V8.70843H3.16683V7.12509ZM13.5519 5.54176H15.8335C16.7079 5.54176 17.4168 6.25064 17.4168 7.12509V8.70842C17.4168 9.37344 17.0068 9.9427 16.4258 10.1772C16.4285 10.2151 16.4299 10.2532 16.4299 10.2918C16.4299 10.4073 16.4173 10.5225 16.3922 10.6352L15.1607 16.1769C14.9998 16.9013 14.3572 17.4168 13.6151 17.4168H5.38522C4.64311 17.4168 4.00057 16.9013 3.83959 16.1769L2.6081 10.6352C2.57383 10.481 2.56332 10.327 2.57414 10.1771C1.99332 9.94248 1.5835 9.37331 1.5835 8.70842V7.12509C1.5835 6.25064 2.29238 5.54176 3.16683 5.54176H5.44839L7.20874 2.02105C7.40427 1.62998 7.87981 1.47147 8.27087 1.667C8.66194 1.86254 8.82045 2.33807 8.62492 2.72914L7.21861 5.54176H11.7817L10.3754 2.72914C10.1799 2.33807 10.3384 1.86254 10.7295 1.667C11.1205 1.47147 11.5961 1.62998 11.7916 2.02105L13.5519 5.54176ZM5.38522 15.8334L4.15373 10.2918H14.8466L13.6151 15.8334H5.38522Z" fill="#FFF" style={{ opacity: 1, strokeDashoffset: '0px' }} strokeDasharray="125.4071273803711"></path>
  </svg>
);

export const PlayPauseIcon = () => (
  <div className="pause">
    <div className="icon--bar"></div>
    <div className="icon--bar"></div>
  </div>
);

export const MuteUnmuteIcon = () => (
  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 43.34 59.53" className="icon icon--svg icon--audio">
    <defs></defs>
    <g>
      <path stroke="currentColor" d="M1.67,18.89A13.94,13.94,0,0,1,6.75,29.65,13.92,13.92,0,0,1,1.67,40.41" className="cls-1" style={{ opacity: 1, strokeDashoffset: '0px' }} strokeDasharray="24.58820152282715"></path>
      <path stroke="currentColor" d="M15.27,10.16A26,26,0,0,1,24,29.53a26,26,0,0,1-8.91,19.52" className="cls-1" style={{ opacity: 1, strokeDashoffset: '0px' }} strokeDasharray="44.00544738769531"></path>
      <path stroke="currentColor" d="M28.8,1.47A38.49,38.49,0,0,1,41.2,29.81,38.52,38.52,0,0,1,29,58" className="cls-1" style={{ opacity: 1, strokeDashoffset: '0px' }} strokeDasharray="63.42880630493164"></path>
    </g>
  </svg>
);

export const SearchIcon = () => (
  <svg xmlns="http://www.w3.org/2000/svg" width="61" height="62" viewBox="0 0 61 62" className="icon icon--search icon--svg">
    <g fill="none" fillRule="evenodd" stroke="currentColor" strokeWidth="6" transform="translate(2 2)">
      <path d="M43.1000046,22.38 C43.104045,31.0728025 37.8707401,38.9119049 29.8407984,42.2412996 C21.8108568,45.5706943 12.5659849,43.7345703 6.41781437,37.5892607 C0.26964379,31.443951 -1.57078297,22.1999348 1.75487393,14.1684444 C5.08053084,6.13695401 12.9171965,0.9 21.61,0.9 C33.4746951,0.9 43.094479,10.5153062 43.1000046,22.38 Z" style={{ opacity: 1, strokeDashoffset: '0px' }} strokeDasharray="135.03297424316406"></path>
      <path d="M36.46,37.9 L57,58.43" style={{ opacity: 1, strokeDashoffset: '0px' }} strokeDasharray="29.040876388549805"></path>
    </g>
  </svg>
);

export const BurgerIcon = () => (
  <div className="icon--burger">
    <div className="icon--burger-top"></div>
    <div className="icon--burger-bottom"></div>
  </div>
);



==== File: ./src/app/components/ScholorshipBlock.jsx ====
import Image from 'next/image';
import Link from 'next/link';

const ChevronIcon = () => (
  <svg viewBox="0 0 18 18" className="w-4 h-4 text-black">
    <polygon 
      fillRule="evenodd" 
      fill="currentColor" 
      stroke="currentColor" 
      strokeWidth=".5" 
      points="0 .682 6.635 3.999 0 7.317 0 8 8 3.999 0 0" 
      transform="translate(5 5)"
    />
  </svg>
);

const ScholarshipBlock = () => {
  return (
    <section className="bg-custom-red py-12">
      <div className="container mx-auto px-4">
        {/* Mobile/Tablet Header */}
        <div className="lg:hidden mb-8">
          <div className="md:ml-[8.33%] md:w-1/2">
            <h2 className="text-2xl font-bold mb-6">
              INTERNATIONAL EXAM BOARDS
            </h2>
          </div>
          <div className="hidden md:block md:ml-[8.33%] md:w-[83.33%]">
            <hr className="border-t border-gray-300" />
          </div>
        </div>

        <div className="flex flex-col lg:flex-row lg:items-center lg:justify-between">
          {/* Image Section */}
          <div className="md:ml-[8.33%] lg:ml-0 md:w-5/12">
            <div className="relative aspect-[4/3] w-full">
              <Image
                src="/student-life-strings.jpeg"
                alt="String students look over the shoulder of a piano accompanist"
                fill
                className="object-cover filter grayscale"
                sizes="(max-width: 768px) 100vw, (max-width: 1024px) 50vw, 40vw"
              />
            </div>
          </div>

          {/* Content Section */}
          <div className="md:ml-[8.33%] lg:ml-[16.67%] md:w-5/12 mt-8 lg:mt-0 text-white">
            <div className="pr-4 lg:pr-24">
              {/* Desktop Header */}
              <h2 className="hidden lg:block text-6xl font-thin mb-6">
              INTERNATIONAL EXAM BOARDS
              </h2>

              {/* Content */}
              <div className="hidden md:block">
                <div className="prose max-w-none mb-6">
                  <p>The Academy is committed to ensuring that the cost of tuition fees does not deter you from applying.</p>
                  <p>Over £5 million is awarded annually in scholarships and bursaries to 83% of students.</p>
                </div>

                <ul className="space-y-4">
                  <li>
                    <Link 
                      href="/study/fees-and-funding/scholarships-and-bursaries"
                      className="group flex items-center text-red-600 hover:text-red-700"
                    >
                      <span className="mr-2 text-white">Scholarships and bursaries</span>
                      <ChevronIcon />
                    </Link>
                  </li>
                  <li>
                    <Link 
                      href="/study/fees-and-funding/financial-assistance"
                      className="group flex items-center text-red-600 hover:text-red-700"
                    >
                      <span className="mr-2 text-white">Financial assistance</span>
                      <ChevronIcon />
                    </Link>
                  </li>
                </ul>
              </div>
            </div>
          </div>
        </div>

        {/* Mobile Content */}
        <div className="block md:hidden mt-8">
          <div className="prose max-w-none mb-6">
            <p>The Academy is committed to ensuring that the cost of tuition fees does not deter you from applying.</p>
            <p>Over £5 million is awarded annually in scholarships and bursaries to 83% of students.</p>
          </div>

          <ul className="space-y-4">
            <li>
              <Link 
                href="/study/fees-and-funding/scholarships-and-bursaries"
                className="group flex items-center text-red-600 hover:text-red-700"
              >
                <span className="mr-2">Scholarships and bursaries</span>
                <ChevronIcon />
              </Link>
            </li>
            <li>
              <Link 
                href="/study/fees-and-funding/financial-assistance"
                className="group flex items-center text-red-600 hover:text-red-700"
              >
                <span className="mr-2">Financial assistance</span>
                <ChevronIcon />
              </Link>
            </li>
          </ul>
        </div>
      </div>
    </section>
  );
};

export default ScholarshipBlock;


==== File: ./src/app/components/EventCarousel.jsx ====
import React, { useState } from 'react';
import {
  Dialog,
  DialogContent,
  DialogHeader,
  DialogTitle,
} from "@/components/ui/dialog";
import { ChevronLeft, ChevronRight, X } from "lucide-react";

const EventCarousel = ({ isOpen, onClose }) => {
  const [currentIndex, setCurrentIndex] = useState(0);
  
  // Example events data - replace with your actual events data
  const events = [
    {
      type: 'image',
      src: '/events/recital_gathering.HEIC',
      title: 'Symphony Orchestra Concert',
      description: 'A magnificent performance of Beethoven\'s 9th Symphony'
    },
    {
      type: 'image',
      src: '/events/recital_orchestration.heic',
      title: 'Chamber Music Series',
      description: 'Intimate performances by our talented chamber groups'
    },
    {
        type: 'image',
        src: '/events/recital_picture.HEIC',
        title: 'Chamber Music Series',
        description: 'Intimate performances by our talented chamber groups'
    },
    {
        type: 'image',
        src: '/events/recital_practice.HEIC',
        title: 'Chamber Music Series',
        description: 'Intimate performances by our talented chamber groups'
    },
    {
        type: 'image',
        src: '/events/recital_violins.heic',
        title: 'Chamber Music Series',
        description: 'Intimate performances by our talented chamber groups'
    },
    // {
    //   type: 'video',
    //   src: '/events/jazz-ensemble.mp4',
    //   title: 'Jazz Ensemble Night',
    //   description: 'An evening of classic and contemporary jazz'
    // }
  ];

  const nextSlide = () => {
    setCurrentIndex((prev) => (prev + 1) % events.length);
  };

  const prevSlide = () => {
    setCurrentIndex((prev) => (prev - 1 + events.length) % events.length);
  };

  return (
    <Dialog open={isOpen} onOpenChange={onClose}>
      <DialogContent className="max-w-4xl w-full bg-black text-white border border-white/20">
        <DialogHeader>
          <DialogTitle className="text-2xl font-thin">Spring Season Highlights</DialogTitle>
          <button
            onClick={onClose}
            className="absolute right-4 top-4 text-white/70 hover:text-white transition-colors"
          >
            <X className="w-6 h-6" />
          </button>
        </DialogHeader>
        
        <div className="relative aspect-video mt-4">
          {/* Main content */}
          <div className="relative w-full h-full overflow-hidden">
            {events.map((event, index) => (
              <div
                key={index}
                className={`absolute w-full h-full transition-all duration-500 ease-out transform ${
                  index === currentIndex 
                    ? 'translate-x-0 opacity-100' 
                    : index < currentIndex 
                    ? '-translate-x-full opacity-0' 
                    : 'translate-x-full opacity-0'
                }`}
              >
                {event.type === 'image' ? (
                  <img
                    src={event.src}
                    alt={event.title}
                    className="w-full h-full object-cover"
                  />
                ) : (
                  <video
                    src={event.src}
                    className="w-full h-full object-cover"
                    controls
                  />
                )}
              </div>
            ))}
          </div>

          {/* Navigation arrows */}
          <button
            onClick={prevSlide}
            className="absolute left-4 top-1/2 -translate-y-1/2 bg-black/50 p-2 rounded-full hover:bg-black/70 transition-colors"
          >
            <ChevronLeft className="w-6 h-6 text-white" />
          </button>
          <button
            onClick={nextSlide}
            className="absolute right-4 top-1/2 -translate-y-1/2 bg-black/50 p-2 rounded-full hover:bg-black/70 transition-colors"
          >
            <ChevronRight className="w-6 h-6 text-white" />
          </button>

          {/* Caption */}
          <div className="absolute bottom-0 left-0 right-0 bg-black/70 p-4">
            <h3 className="text-xl font-thin mb-2">{events[currentIndex].title}</h3>
            <p className="text-white/80">{events[currentIndex].description}</p>
          </div>

          {/* Dots indicator */}
          <div className="absolute bottom-20 left-1/2 -translate-x-1/2 flex gap-2">
            {events.map((_, index) => (
              <button
                key={index}
                onClick={() => setCurrentIndex(index)}
                className={`w-2 h-2 rounded-full transition-colors ${
                  index === currentIndex ? 'bg-white' : 'bg-white/30'
                }`}
              />
            ))}
          </div>
        </div>
      </DialogContent>
    </Dialog>
  );
};

export default EventCarousel;


==== File: ./src/app/components/StudentLifeBlock.jsx ====
import React from 'react';
import Link from 'next/link';
import Image from 'next/image';

const ChevronArrow = () => (
  <svg viewBox="0 0 18 18" className="w-4 h-4">
    <polygon 
      fillRule="evenodd" 
      stroke="currentColor" 
      fill="currentColor" 
      strokeWidth=".5" 
      points="0 .682 6.635 3.999 0 7.317 0 8 8 3.999 0 0" 
      transform="translate(5 5)"
    />
  </svg>
);

const StudentLifeBlock = () => {
  return (
    <div className="container mx-auto px-4">
      <div className="row">
        <div className="col-12 mt-20 lg:mt-0">
          <h2 className="text-6xl md:text-8xl font-display mb-8">
            Student Life
          </h2>
        </div>
      </div>
      
      <div className="flex flex-col lg:flex-row">
        <div className="lg:w-1/4">
          <div>
            <div className="bg-white p-6">
              <div className="prose">
                <p>
                  When you come to the Academy, you will form lifelong friendships with people from around the world.
                </p>
              </div>
              
              <Link href="/student-life" className="inline-flex items-center mt-4 text-sm hover:underline">
                <span>Explore Student Life</span>
                <span className="ml-2">
                  <ChevronArrow />
                </span>
              </Link>
            </div>

            <div className="block lg:hidden mt-6">
              <Image
                src="https://supercool-ram.transforms.svdcdn.com/production/200731-COMM-WEBS-StudentLifeImage-1_2020-08-19-151828.jpg"
                alt="A student carries a cello case into the entrance of the Academy"
                width={960}
                height={640}
                className="w-full"
              />
            </div>

            <div className="bg-black text-white p-6 mt-6">
              <div className="space-y-4">
                <Link href="/student-life/living-in-london" className="block hover:underline">
                  Living in London
                </Link>
                <Link href="/student-life/health-wellbeing" className="block hover:underline">
                  Health and wellbeing
                </Link>
                <Link href="/student-life/term-dates" className="block hover:underline">
                  Term dates
                </Link>
              </div>
            </div>
          </div>
        </div>

        <div className="hidden lg:block lg:w-3/4 pl-6">
          <Image
            src="https://supercool-ram.transforms.svdcdn.com/production/200731-COMM-WEBS-StudentLifeImage-1_2020-08-19-151828.jpg"
            alt="A student carries a cello case into the entrance of the Academy"
            width={960}
            height={640}
            className="w-full h-full object-cover"
          />
        </div>
      </div>
    </div>
  );
};

export default StudentLifeBlock;


==== File: ./src/app/components/IntroKeylineBlock.jsx ====
"use client";
import { useState, useEffect } from 'react';

export default function IntroKeylineBlock() {
  const [isVisible, setIsVisible] = useState(false);

  useEffect(() => {
    const observer = new IntersectionObserver(
      ([entry]) => {
        if (entry.isIntersecting) {
          setIsVisible(true);
          observer.unobserve(entry.target);
        }
      },
      { threshold: 0.1 }
    );

    const element = document.querySelector('[data-intro-keyline]');
    if (element) {
      observer.observe(element);
    }

    return () => {
      if (element) {
        observer.unobserve(element);
      }
    };
  }, []);

  return (
    <div data-intro-keyline="" className="bg-custom-red text-white overflow-hidden relative">
      <div className="container mx-auto my-0 py-20">
        {/* Heading Row */}
        <div className="flex mb-0 md:mb-[10rem]">
          <div className="md:ml-[50%] lg:ml-[58.33%] md:w-[41.66%]">
            <h2 
              className={`text-4xl md:text-5xl lg:text-6xl font-thin transform transition-all duration-1000 ${
                isVisible ? 'translate-y-0 opacity-100' : 'translate-y-8 opacity-0'
              }`}
            >
              WHERE MUSIC EVOLVES
            </h2>
          </div>
        </div>

        {/* Content Row with SVG */}
        <div className="flex relative">
          <div className="md:ml-[8.33%] md:w-[41.66%] lg:w-[33.33%]">
            {/* SVG Path with animation */}
            <svg 
              viewBox="0 0 184 151" 
              preserveAspectRatio="none"
              className="w-80% h-[150px] absolute -top-[11rem] right-[46%] hidden md:block"
            >
              <path 
                fill="none" 
                fillRule="evenodd" 
                stroke="#FFF" 
                strokeWidth="1"
                d="M183.5,0.5 C98.373,0.5 29.489,35.596 0.5,150.5"
                className={`transition-all duration-1000 ${
                  isVisible ? 'stroke-dashoffset-0' : 'stroke-dashoffset-full'
                }`}
                style={{
                  strokeDasharray: '259.3521728515625',
                  strokeDashoffset: isVisible ? '0' : '259.3521728515625'
                }}
              />
            </svg>

            {/* Content with fade-in animation */}
            <div 
              className={`transform transition-all duration-1000 delay-500 ${
                isVisible ? 'translate-y-0 opacity-100' : 'translate-y-8 opacity-0'
              }`}
            >
              <div className="prose prose-invert max-w-none mt-8">
                <p className="text-lg">
                  A space for fearless artists to unite, innovate, and push boundaries. We blend tradition with tomorrow, shaping the sound of what’s next.
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}


==== File: ./src/app/components/FutureOfMusicBlock.jsx ====
import React from 'react';
import Image from 'next/image';
import Link from 'next/link';

const ChevronArrow = () => (
  <svg viewBox="0 0 18 18" className="w-4 h-4">
    <polygon 
      fillRule="evenodd" 
      fill="currentColor" 
      stroke="currentColor" 
      strokeWidth=".5" 
      points="0 .682 6.635 3.999 0 7.317 0 8 8 3.999 0 0" 
      transform="translate(5 5)"
    />
  </svg>
);

const ChevronLink = ({ href, children }) => (
  <Link 
    href={href}
    className="flex items-center text-black hover:text-gray-700 transition-colors group"
  >
    <span className="mr-2">{children}</span>
    <div className="transition-transform group-hover:translate-x-1">
      <ChevronArrow />
    </div>
  </Link>
);

const FutureOfMusicBlock = () => {
  return (
    <div className="bg-black text-white py-16 ">
      <div className="container mx-auto px-4">
        {/* Mobile Heading */}
        <div className="lg:hidden mb-8">
          <div className="md:ml-[8.33%]">
            <h2 className="text-2xl font-thin mb-6">
              The Future of Music
            </h2>
          </div>
          <div className="hidden md:block md:ml-[8.33%] md:w-[83.33%]">
            <hr className="border-t border-gray-700" />
          </div>
        </div>

        <div className="flex flex-col lg:flex-row lg:items-start lg:justify-between">
          {/* Image Section */}
          <div className="md:ml-[8.33%] lg:ml-0 md:w-[41.66%] lg:w-5/12">
            <div className="w-full h-full">
              <div className="relative w-full pt-[100%]">
                <Image
                  src="/Naarah-A-World-of-Opportunity-Comes-Closer_2024-10-09-140523_hwuv.jpg"
                  alt="A student peers up at a ceiling dotted with many ornate lights"
                  fill
                  className="object-cover"
                  sizes="(max-width: 768px) 100vw, 50vw"
                  priority
                />
              </div>
            </div>
          </div>

          {/* Text Section */}
          <div className="md:ml-[8.33%] lg:ml-[16.66%] md:w-[41.66%] lg:w-5/12 mt-8 lg:mt-0">
            {/* Desktop Heading */}
            <h2 className="hidden lg:block text-2xl font-thin mb-6">
              The Future of Music
            </h2>

            {/* Content */}
            <div className="space-y-4 mb-8">
              <p>
                Together we have the power to help talented students
                realise their potential.
              </p>
              <p>
                With your support, we can help new generations discover, develop and master their craft – for the whole world to enjoy.
              </p>
            </div>

            {/* Links */}
            <ul className="space-y-4">
              <li>
                <ChevronLink href="/support-the-academy/campaign">
                  Find out more
                </ChevronLink>
              </li>
              <li>
                <ChevronLink href="https://community.ram.ac.uk/campaign-donate">
                  Give today
                </ChevronLink>
              </li>
            </ul>
          </div>
        </div>
      </div>
    </div>
  );
};

export default FutureOfMusicBlock;


==== File: ./src/app/components/ActiveSlider.jsx ====
"use client";
import React from "react";
import { Swiper, SwiperSlide } from "swiper/react";
import "swiper/swiper-bundle.css";
import { EffectCoverflow, Pagination, Navigation } from "swiper/modules";
import { X } from "lucide-react";

export default function ActiveSlider({ onClose }) {
  const images = [
    "/events/recital_gathering.jpg",
    "/events/recital_orchestration.jpg",
    "/events/recital_picture.jpg",
    "/events/recital_practice.jpg",
    "/events/recital_violins.jpg",
  ];

  return (
    <div className="h-full flex flex-col justify-center">
      <div className="max-w-7xl mx-auto px-4 w-full">
        <div className="flex justify-end mb-8">
          <button 
            onClick={onClose}
            className="text-white hover:text-gray-300 transition-colors"
            aria-label="Close slider"
          >
            <X size={24} />
          </button>
        </div>
        
        <Swiper
          modules={[EffectCoverflow, Pagination, Navigation]}
          effect="coverflow"
          grabCursor={true}
          centeredSlides={true}
          loop={true}
          slidesPerView={"auto"} // Automatically adjust slides per view
          spaceBetween={20} // Space between the slides
          breakpoints={{
            // For smaller screens, show fewer slides
            640: {
              slidesPerView: 1,
              centeredSlides: true,
            },
            768: {
              slidesPerView: 2,
              centeredSlides: true,
            },
            1024: {
              slidesPerView: 3,
              centeredSlides: true,
            },
          }}
          coverflowEffect={{
            rotate: 50,
            stretch: 0,
            depth: 100,
            modifier: 1,
            slideShadows: true,
          }}
          pagination={{
            type: "bullets",
            clickable: true,
          }}
          navigation={true}
          className="mySwiper"
        >
          {images.map((src, index) => (
            <SwiperSlide key={index} className="swiper-slide">
              <img
                src={src}
                alt={`Slide ${index + 1}`}
                className="w-full h-auto max-h-[400px] md:max-h-[500px] rounded-xl object-cover mx-auto"
              />
            </SwiperSlide>
          ))}
        </Swiper>
      </div>
    </div>
  );
}



==== File: ./src/app/components/FooterTop.jsx ====
import React from 'react';
import Link from 'next/link';

const FacebookIcon = () => (
  <svg viewBox="0 0 24 24" className="w-6 h-6 fill-current transform transition-transform duration-300 group-hover:scale-110">
    <path d="M9 8H6v4h3v12h5V12h3.642L18 8h-4V6.333C14 5.378 14.192 5 15.115 5H18V0h-3.808C10.596 0 9 1.583 9 4.615V8z" />
  </svg>
);

const InstagramIcon = () => (
  <svg viewBox="0 0 24 24" className="w-6 h-6 fill-current transform transition-transform duration-300 group-hover:scale-110">
    <path d="M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849 0 3.205-.012 3.584-.069 4.849-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07-3.204 0-3.584-.012-4.849-.07-3.26-.149-4.771-1.699-4.919-4.92-.058-1.265-.07-1.644-.07-4.849 0-3.204.013-3.583.07-4.849.149-3.227 1.664-4.771 4.919-4.919 1.266-.057 1.645-.069 4.849-.069zM12 0C8.741 0 8.333.014 7.053.072 2.695.272.273 2.69.073 7.052.014 8.333 0 8.741 0 12c0 3.259.014 3.668.072 4.948.2 4.358 2.618 6.78 6.98 6.98C8.333 23.986 8.741 24 12 24c3.259 0 3.668-.014 4.948-.072 4.354-.2 6.782-2.618 6.979-6.98.059-1.28.073-1.689.073-4.948 0-3.259-.014-3.667-.072-4.947-.196-4.354-2.617-6.78-6.979-6.98C15.668.014 15.259 0 12 0zm0 5.838a6.162 6.162 0 100 12.324 6.162 6.162 0 000-12.324zM12 16a4 4 0 110-8 4 4 0 010 8zm6.406-11.845a1.44 1.44 0 100 2.881 1.44 1.44 0 000-2.881z" />
  </svg>
);

const YouTubeIcon = () => (
  <svg viewBox="0 0 24 24" className="w-6 h-6 fill-current transform transition-transform duration-300 group-hover:scale-110">
    <path d="M23.498 6.186a3.016 3.016 0 00-2.122-2.136C19.505 3.545 12 3.545 12 3.545s-7.505 0-9.377.505A3.017 3.017 0 00.502 6.186C0 8.07 0 12 0 12s0 3.93.502 5.814a3.016 3.016 0 002.122 2.136c1.871.505 9.376.505 9.376.505s7.505 0 9.377-.505a3.015 3.015 0 002.122-2.136C24 15.93 24 12 24 12s0-3.93-.502-5.814zM9.545 15.568V8.432L15.818 12l-6.273 3.568z" />
  </svg>
);

const FooterTop = () => {
  return (
    <div className="bg-black text-white py-8">
      <div className="container mx-auto">
        <div className="flex flex-col md:flex-row justify-between items-center">
          {/* Social Media Navigation */}
          <nav aria-label="Social" className="mb-6 md:mb-0">
            <h5 className="sr-only">Social Media Navigation</h5>
            <ul className="flex space-x-6">
              <li>
                <a
                  href="https://www.facebook.com/goodshepherdmusic/?_rdr"
                  className="text-white hover:text-gray-300 group"
                  aria-label="A link to facebook"
                  target="_blank"
                  rel="noopener noreferrer"
                >
                  <span className="sr-only">facebook</span>
                  <FacebookIcon />
                </a>
              </li>
              <li>
                <a
                  href="https://www.instagram.com/goodshepherdim?igsh=enNqcXZlbHhseDVh"
                  className="text-white hover:text-gray-300 group"
                  aria-label="A link to instagram"
                  target="_blank"
                  rel="noopener noreferrer"
                >
                  <span className="sr-only">instagram</span>
                  <InstagramIcon />
                </a>
              </li>
              <li>
                <a
                  href="https://youtube.com/@goodshepherdinstituteofmus1616?si=MnNhjRKhsCaDvK6O"
                  className="text-white hover:text-gray-300 group"
                  aria-label="A link to youtube"
                  target="_blank"
                  rel="noopener noreferrer"
                >
                  <span className="sr-only">youtube</span>
                  <YouTubeIcon />
                </a>
              </li>
            </ul>
          </nav>

          {/* Secondary Navigation */}
          <nav aria-label="Secondary Navigation" className="md:ml-auto">
            <h5 className="sr-only">Secondary Navigation</h5>
            <ul className="flex flex-wrap md:flex-nowrap items-center space-x-4 md:space-x-8">
              <li className="whitespace-nowrap">
                <Link href="/about-us" className="relative text-white font-bold group">
                  About us
                  <span className="absolute left-0 bottom-0 block w-0 h-0.25 bg-custom-red transition-all duration-30 group-hover:w-full"></span>
                </Link>
              </li>
            </ul>
          </nav>
        </div>
      </div>
    </div>
  );
};

export default FooterTop;



==== File: ./src/app/components/TeachersandtutorsBlock.jsx ====
"use client";
import { useState, useEffect } from 'react';

export default function TeachersandtutorsBlock() {
  const [isVisible, setIsVisible] = useState(false);

  useEffect(() => {
    const observer = new IntersectionObserver(
      ([entry]) => {
        if (entry.isIntersecting) {
          setIsVisible(true);
          observer.unobserve(entry.target);
        }
      },
      { threshold: 0.1 }
    );

    const elements = document.querySelectorAll('[data-intersect="once"]');
    elements.forEach(el => observer.observe(el));

    return () => {
      elements.forEach(el => observer.unobserve(el));
    };
  }, []);

  return (
    <div className="bg-black py-16">
      <div className="container mx-auto px-4">
        <div className="lg:hidden">
          <div className="md:ml-[8.33%] md:w-1/2">
            <h2 
              data-intersect="once"
              className={`text-5xl text-white font-thin mb-6 transform transition-transform duration-500 ${
                isVisible ? 'translate-y-0 opacity-100' : 'translate-y-4 opacity-0'
              }`}
            >
              TEACHERS & MENTORS
            </h2>
          </div>
          <div className="hidden md:block md:ml-[8.33%] md:w-[83.33%]">
            <hr className="border-t border-white/20" />
          </div>
        </div>

        {/* Tablet Header (hidden on desktop) */}
        <div className="hidden md:block lg:hidden">
          <div className="md:ml-[8.33%] md:w-1/2">
            <h2 
              data-intersect="once"
              className={`text-2xl text-white font-bold mb-1 transform transition-transform duration-500 ${
                isVisible ? 'translate-y-0 opacity-100' : 'translate-y-4 opacity-0'
              }`}
            >
              TEACHERS &amp; MENTORS
            </h2>
          </div>
        </div>

        {/* Main Content */}
        <div className="flex flex-wrap">
          {/* Text Content */}
          <div className="md:w-[41.66%] md:ml-[8.33%] flex flex-col justify-center">
            <div 
              data-intersect="once"
              className={`md:pr-4 transform transition-transform duration-500 ${
                isVisible ? 'translate-y-0 opacity-100' : 'translate-y-4 opacity-0'
              }`}
            >
              {/* Desktop Header */}
              <h2 className="hidden lg:block text-7xl font-thin text-white mb-6">
                TEACHERS & MENTORS
              </h2>

              {/* Main Content - Desktop/Tablet */}
              <div className="hidden md:block">
                <div className="pr-2 lg:pr-24">
                  <p className="mb-6 text-white">
                    Experienced tutors share their knowledge and insights, creating a space where students can learn, explore, and grow at their own pace, guided by genuine support and understanding.
                  </p>
                </div>
                {/* <div>
                  <ul>
                    <li>
                      <a 
                        href="/study/artistic-excellence"
                        className="group inline-flex items-center text-white hover:text-white transition-colors relative"
                      >
                        <span className="mr-2">Artistic Excellence and Opportunities</span>
                        <div className="transform transition-transform group-hover:translate-x-1">
                          <svg viewBox="0 0 18 18" className="w-4 h-4 text-custom-red group-hover:hidden">
                            <polygon 
                              fillRule="evenodd" 
                              fill="currentcolor" 
                              stroke="currentcolor" 
                              strokeWidth=".5" 
                              points="0 .682 6.635 3.999 0 7.317 0 8 8 3.999 0 0" 
                              transform="translate(5 5)"
                            />
                          </svg>
                        </div>
                        <span className="absolute bottom-0 left-0 w-0 h-0.25 bg-custom-red transition-all duration-300 group-hover:w-full"></span>
                      </a>
                    </li>
                  </ul>
                </div> */}
              </div>
            </div>
          </div>

          {/* Image Section */}
          <div className="md:w-1/2 lg:w-[41.66%]">
            <div 
              data-intersect="once"
              className={`px-0 lg:px-3 transform transition-opacity duration-500 ${
                isVisible ? 'opacity-100' : 'opacity-0'
              }`}
            >
              <img
                src="https://supercool-ram.transforms.svdcdn.com/production/RU5A8450.jpg?w=1024&q=90&auto=format&fit=crop&crop=focalpoint&fp-x=0.5&fp-y=0.5&dm=1701347741&s=7dc3edbfc8522c0557504b24c2e90636"
                alt="A violin duo perform alongside each other, reading sheet music"
                className="w-full h-auto grayscale"
              />
            </div>
          </div>
        </div>

        {/* Mobile Content Section */}
        <div className="sm:block md:hidden">
          <div 
            data-intersect="once"
            className={`lg:w-1/2 lg:ml-[8.33%] transform transition-transform duration-500 ${
              isVisible ? 'translate-y-0 opacity-100' : 'translate-y-4 opacity-0'
            }`}
          >
            <div className="pr-2 lg:pr-24">
              <p className="mb-6 text-white">
                Experienced tutors share their knowledge and insights, creating a space where students can learn, explore, and grow at their own pace, guided by genuine support and understanding.
              </p>
            </div>
            {/* <div>
              <ul>
                <li>
                  <a 
                    href="/study/artistic-excellence"
                    className="group inline-flex items-center text-black hover:text-white transition-colors relative"
                  >
                    <span className="mr-2 text-white">Artistic Excellence and Opportunities</span>
                    <div className="transform transition-transform group-hover:translate-x-1">
                      <svg viewBox="0 0 18 18" className="w-4 h-4 text-custom-red">
                        <polygon 
                          fillRule="evenodd" 
                          fill="currentcolor" 
                          stroke="currentcolor" 
                          strokeWidth=".5" 
                          points="0 .682 6.635 3.999 0 7.317 0 8 8 3.999 0 0" 
                          transform="translate(5 5)"
                        />
                      </svg>
                    </div>
                    <span className="absolute bottom-0 left-0 w-0 h-0.25 bg-custom-red transition-all duration-300 group-hover:w-full"></span>
                  </a>
                </li>
              </ul>
            </div> */}
          </div>
        </div>
      </div>
    </div>
  );
}



==== File: ./src/app/components/MusicRegistrationForm.jsx ====
"use client"
import { useState } from "react"
import { toast } from "sonner"
import { useForm } from "react-hook-form"
import { zodResolver } from "@hookform/resolvers/zod"
import * as z from "zod"
import { Button } from "@/components/ui/button"
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form"
import { Input } from "@/components/ui/input"
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select"
import { PhoneInput } from "@/components/ui/phone-input"

// Form validation schema
const formSchema = z.object({
  Name: z.string().min(1, "Name is required"),
  "Activity Status": z.string().optional(),
  Gender: z.string().min(1, "Gender is required"),
  "School / College / Occupation": z.string().optional(),
  "E - mail": z.string().email().optional(),
  "Phone number": z.string().min(1, "Phone number is required"),
  "Residence Address": z.string().optional(),
  "Type of Musical Instrument": z.string().min(1, "Instrument type is required"),
  "Date of Birth": z.string().refine((val) => !isNaN(Date.parse(val)), "Invalid date format"), // Accepting string but validating format
})

const activityOptions = [
  "School",
  "College",
  "Working Professional",
  "Other"
]

const genderOptions = [
  "Male",
  "Female",
  "Other",
  "Prefer not to say"
]

const instrumentOptions = [
  "Piano",
  "Keyboard",
  "Guitar",
  "Violin",
  "Drums",
  "Recorder",
  "Ukulele",
  "Classical Vocals",
  "Western Vocals",
  "Dance",
  "Other"
]

export default function MusicRegistrationForm() {
  const form = useForm({
    resolver: zodResolver(formSchema),
    defaultValues: {
      Name: "",
      "Activity Status": "",
      Gender: "",
      "School / College / Occupation": "",
      "E - mail": "",
      "Phone number": "",
      "Residence Address": "",
      "Type of Musical Instrument": "",
      "Date of Birth": "",
    },
  })

  // Form submission handler
  async function onSubmit(values) {
    try {
      // Debugging: Log form data to check its structure
      console.log("Form data before submission:", values);

      // Convert Date of Birth to Date object and format it as an ISO string
      const formattedValues = {
        ...values,
        "Date of Birth": new Date(values["Date of Birth"]).toISOString(),  // Ensure a valid date format for submission
      }

      const response = await fetch("/api/register", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(formattedValues), // Send the updated values
      })

      const data = await response.json()

      if (response.ok) {
        toast.success("Form submitted successfully!")
        form.reset() // Optionally reset the form
      } else {
        toast.error(data.error || "Failed to submit the form. Please try again.")
      }
    } catch (error) {
      console.error("Form submission error", error)
      toast.error("Failed to submit the form. Please try again.")
    }
  }

  return (
    <Form {...form}>
      <form onSubmit={form.handleSubmit(onSubmit)} className="space-y-8 max-w-3xl mx-auto py-10">
        {/* Grid Layout for Name and Date of Birth */}
        <div className="grid grid-cols-12 gap-4">
          <div className="col-span-6">
            <FormField
              control={form.control}
              name="Name"
              render={({ field }) => (
                <FormItem>
                  <FormLabel>Name</FormLabel>
                  <FormControl>
                    <Input placeholder="Enter your name" {...field} />
                  </FormControl>
                  <FormMessage />
                </FormItem>
              )}
            />
          </div>

          <div className="col-span-6">
            <FormField
              control={form.control}
              name="Date of Birth"
              render={({ field }) => (
                <FormItem>
                  <FormLabel>Date of Birth</FormLabel>
                  <FormControl>
                    <Input
                      type="date"
                      value={field.value} // Ensure the value is correctly formatted here
                      onChange={(e) => field.onChange(e.target.value)}
                      placeholder="Select your date of birth"
                    />
                  </FormControl>
                  <FormMessage />
                </FormItem>
              )}
            />
          </div>
        </div>

        {/* Rest of the form */}
        <div className="grid grid-cols-12 gap-4">
          <div className="col-span-6">
            <FormField
              control={form.control}
              name="Activity Status"
              render={({ field }) => (
                <FormItem>
                  <FormLabel>Activity Status</FormLabel>
                  <Select onValueChange={field.onChange} defaultValue={field.value}>
                    <FormControl>
                      <SelectTrigger>
                        <SelectValue placeholder="Select your Current Status" />
                      </SelectTrigger>
                    </FormControl>
                    <SelectContent>
                      {activityOptions.map((option) => (
                        <SelectItem key={option} value={option}>
                          {option}
                        </SelectItem>
                      ))}
                    </SelectContent>
                  </Select>
                  <FormMessage />
                </FormItem>
              )}
            />
          </div>

          <div className="col-span-6">
            <FormField
              control={form.control}
              name="Gender"
              render={({ field }) => (
                <FormItem>
                  <FormLabel>Gender</FormLabel>
                  <Select onValueChange={field.onChange} defaultValue={field.value}>
                    <FormControl>
                      <SelectTrigger>
                        <SelectValue placeholder="Select your Gender" />
                      </SelectTrigger>
                    </FormControl>
                    <SelectContent>
                      {genderOptions.map((option) => (
                        <SelectItem key={option} value={option}>
                          {option}
                        </SelectItem>
                      ))}
                    </SelectContent>
                  </Select>
                  <FormMessage />
                </FormItem>
              )}
            />
          </div>
        </div>

        <FormField
          control={form.control}
          name="School / College / Occupation"
          render={({ field }) => (
            <FormItem>
              <FormLabel>School / College / Occupation</FormLabel>
              <FormControl>
                <Input placeholder="Enter your school/college/occupation" {...field} />
              </FormControl>
              <FormMessage />
            </FormItem>
          )}
        />

        <div className="grid grid-cols-12 gap-4">
          <div className="col-span-6">
            <FormField
              control={form.control}
              name="E - mail"
              render={({ field }) => (
                <FormItem>
                  <FormLabel>E-mail</FormLabel>
                  <FormControl>
                    <Input placeholder="Enter your email" type="email" {...field} />
                  </FormControl>
                  <FormMessage />
                </FormItem>
              )}
            />
          </div>

          <div className="col-span-6">
            <FormField
              control={form.control}
              name="Phone number"
              render={({ field }) => (
                <FormItem className="flex flex-col items-start">
                  <FormLabel>Phone number</FormLabel>
                  <FormControl className="w-full">
                    <PhoneInput {...field} defaultCountry="IN" />
                  </FormControl>
                  <FormMessage />
                </FormItem>
              )}
            />
          </div>
        </div>

        <FormField
          control={form.control}
          name="Residence Address"
          render={({ field }) => (
            <FormItem>
              <FormLabel>Residence Address</FormLabel>
              <FormControl>
                <Input placeholder="Enter your address" {...field} />
              </FormControl>
              <FormMessage />
            </FormItem>
          )}
        />

        <FormField
          control={form.control}
          name="Type of Musical Instrument"
          render={({ field }) => (
            <FormItem>
              <FormLabel>Type of Musical Instrument</FormLabel>
              <Select onValueChange={field.onChange} defaultValue={field.value}>
                <FormControl>
                  <SelectTrigger>
                    <SelectValue placeholder="Select an instrument you want to learn" />
                  </SelectTrigger>
                </FormControl>
                <SelectContent>
                  {instrumentOptions.map((option) => (
                    <SelectItem key={option} value={option}>
                      {option}
                    </SelectItem>
                  ))}
                </SelectContent>
              </Select>
              <FormMessage />
            </FormItem>
          )}
        />

        <Button type="submit">Submit</Button>
      </form>
    </Form>
  )
}



==== File: ./src/app/components/RecitalBlock.jsx ====
"use client";
import Link from 'next/link';
import { useState, useEffect } from 'react';
import ActiveSlider from './ActiveSlider';

export default function RecitalBlock() {
  const [isVisible, setIsVisible] = useState(false);
  const [isSliderOpen, setIsSliderOpen] = useState(false);

  useEffect(() => {
    const observer = new IntersectionObserver(
      ([entry]) => {
        if (entry.isIntersecting) {
          setIsVisible(true); // Start the animation when the element is visible
          observer.unobserve(entry.target); // Stop observing once it is in view
        }
      },
      {
        threshold: 0.2, // The threshold defines how much of the element should be in view before the observer is triggered (e.g., 0.1 = 10%)
      }
    );

    // Select all elements that should trigger the animation when in view
    const elements = document.querySelectorAll('[data-intersect="once"]');
    elements.forEach((element) => observer.observe(element));

    // Cleanup observer when the component is unmounted or the effect is rerun
    return () => {
      elements.forEach((element) => observer.unobserve(element));
    };
  }, []);

  const handleOpenSlider = (e) => {
    e.preventDefault();
    setIsSliderOpen(true);
    // Prevent body scrolling when modal is open
    document.body.style.overflow = 'hidden';
  };

  // Handle closing the slider
  const handleCloseSlider = () => {
    setIsSliderOpen(false);
    // Restore body scrolling
    document.body.style.overflow = 'unset';
  };

  return (
    <div className="bg-white text-black py-16">
      <div className="container mx-auto px-4">
        
        {/* Section with Heading and Divider (visible on small screens only) */}
        <div className="lg:hidden">
          <div className="md:ml-[8.33%]">
            <h2
              className={`text-5xl font-thin mb-6 transform transition-transform duration-1000 ease-out text-custom-red ${
                isVisible ? 'translate-y-0 opacity-100' : 'translate-y-8 opacity-0'
              }`}
              data-intersect="once"
            >
              RECITALS
            </h2>
          </div>
          <div className="hidden md:block md:ml-[8.33%] md:w-[83.33%]">
            <hr className="border-t border-white/20" />
          </div>
        </div>

        {/* Main Content Section */}
        <div className="flex flex-wrap">
          {/* Text Content for Small Screens */}
          <div className="md:ml-[8.33%] md:w-[41.66%] flex flex-col lg:justify-center">
            <div
              className={`transform transition-transform duration-1000 ease-out  ${
                isVisible ? 'translate-y-0 opacity-100' : 'translate-y-8 opacity-0'
              }`}
              data-intersect="once"
            >
              {/* Hidden Heading for Larger Screens */}
              <h2
                className={`hidden lg:block text-8xl font-thin mb-12 text-custom-red ${
                  isVisible ? 'opacity-100' : 'opacity-0'
                }`}
              >
                RECITALS
              </h2>
              <div className="hidden md:block">
                <div className="pr-2 lg:pr-24">
                  <p className="mb-4">
                    <span>
                    Each month, Academy students perform, showcasing a range of musical styles with instruments like String Orchestra, Violin, Drums, Piano, Keyboard, and Guitar—spanning Orchestral, Chamber Music, and Contemporary Performances.
                    </span>
                  </p>
                  <p className="mb-6">Explore our gallery for a glimpse into past recitals</p>
                </div>
                <div>
                  <ul>
                    <li>
                      <button
                        onClick={handleOpenSlider}
                        className="group inline-flex items-center text-black hover:text-black transition-colors relative"
                      >
                        <div className="relative inline-block">
                          <span className="mr-2">SEE OUR RECITAL EVENTS</span>
                          {/* Underline effect */}
                          <span className="absolute bottom-0 left-0 w-0 h-0.25 bg-custom-red transition-all duration-300 group-hover:w-full inline-block"></span>
                        </div>
                        <div className="transform transition-transform group-hover:translate-x-1">
                          <svg viewBox="0 0 18 18" className="w-4 h-4 text-custom-red group-hover:hidden">
                            <polygon
                              fillRule="evenodd"
                              fill="currentColor"
                              stroke="currentColor"
                              strokeWidth=".5"
                              points="0 .682 6.635 3.999 0 7.317 0 8 8 3.999 0 0"
                              transform="translate(5 5)"
                            />
                          </svg>
                        </div>
                      </button>
                    </li>
                  </ul>
                </div>
              </div>
            </div>
          </div>

          {/* Image Section for Larger Screens */}
          <div className="md:w-[41.66%] lg:ml-[8.33%]">
            <div
              className={`transform transition-opacity duration-1000 ease-out ${
                isVisible ? 'opacity-100' : 'opacity-0'
              }`}
              data-intersect="once"
            >
              <img
                src="/Recital.png"
                alt="An image of a student playing the cello, with the Royal Academy of Music logo and the title 'Spring 2025' superimposed"
                className="w-full h-auto"
              />
            </div>
          </div>
        </div>

        {/* Section with Divider and Text (visible on mobile screens only) */}
        <div className="sm:block md:hidden">
          <div
            className={`lg:w-1/2 lg:ml-[8.33%] transform transition-transform duration-1000 ease-out ${
              isVisible ? 'translate-y-0 opacity-100' : 'translate-y-8 opacity-0'
            }`}
            data-intersect="once"
          >
            <div className="pr-2 lg:pr-24">
              <p className="mb-4">
                <span>
                  Each month, Academy students perform, showcasing a range of musical styles with instruments like String Orchestra, Violin, Drums, Piano, Keyboard, and Guitar—spanning Orchestral, Chamber Music, and Contemporary Performances.
                </span>
              </p>
              <p className="mb-6">Explore our gallery for a glimpse into past recitals.</p>
            </div>
            <div>
              <ul>
                <li>
                  <button
                    onClick={handleOpenSlider}
                    className="group inline-flex items-center text-black hover:text-black transition-colors relative"
                  >
                    <div className="relative inline-block">
                      <span className="mr-2">SEE OUR RECITAL EVENTS</span>
                      {/* Underline effect */}
                      <span className="absolute bottom-0 left-0 w-0 h-0.25 bg-custom-red transition-all duration-300 group-hover:w-full inline-block"></span>
                    </div>
                    <div className="transform transition-transform group-hover:translate-x-1">
                      <svg viewBox="0 0 18 18" className="w-4 h-4 text-custom-red group-hover:hidden">
                        <polygon
                          fillRule="evenodd"
                          fill="currentColor"
                          stroke="currentColor"
                          strokeWidth=".5"
                          points="0 .682 6.635 3.999 0 7.317 0 8 8 3.999 0 0"
                          transform="translate(5 5)"
                        />
                      </svg>
                    </div>
                  </button>
                </li>
              </ul>
            </div>
          </div>
        </div>
      </div>
      {isSliderOpen && (
        <div className="fixed inset-0 z-50">
          {/* Backdrop */}
          <div
            className="absolute inset-0 bg-black/50 backdrop-blur-sm"
            onClick={handleCloseSlider}
          ></div>
          
          {/* Modal Content */}
          <div className="relative z-10 w-full h-full">
            <ActiveSlider onClose={handleCloseSlider} />
          </div>
        </div>
      )}
    </div>
  );
}



==== File: ./src/app/components/MainNavigation.jsx ====
'use client';
import React, { useEffect, useState } from 'react';
import Image from 'next/image';
import Link from 'next/link';
import { motion, AnimatePresence } from 'framer-motion';

const Navigation = () => {
  const [showElements, setShowElements] = useState(false);
  const [showLoginForm, setShowLoginForm] = useState(false);
  const [isLoggedIn, setIsLoggedIn] = useState(false);
  const [loginData, setLoginData] = useState({
    email: '',
    password: ''
  });
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState('');

  useEffect(() => {
    setTimeout(() => {
      setShowElements(true);
    }, 200);
  }, []);

  const handleLogin = async (e) => {
    e.preventDefault();
    setIsLoading(true);
    setError('');

    // Simulate API call
    await new Promise(resolve => setTimeout(resolve, 800));

    if (loginData.email === 'admin@example.com' && loginData.password === 'admin123') {
      setIsLoggedIn(true);
      setShowLoginForm(false);
      setLoginData({ email: '', password: '' });
    } else {
      setError('Invalid credentials');
    }
    setIsLoading(false);
  };

  const handleLogout = () => {
    setIsLoggedIn(false);
    setLoginData({ email: '', password: '' });
  };

  return (
    <div className="absolute z-5 w-full gradient">
      <div className="relative container mx-auto px-4 md:px-[4.375rem] max-w-[1300px]">
        <nav className="relative z-10 flex items-start justify-between pt-[2.625rem] pb-[2.375rem]">
          <h2 className="sr-only">Website Navigation</h2>

          {/* Logo */}
          <div className={`nav-logo w-[150px] md:w-[10.4375rem] flex-shrink-0 flex items-center transition-all duration-500 ${showElements ? 'opacity-100 translate-x-0 delay-200' : 'opacity-0 translate-x-[-20px]'}`}>
            <Link href="https://goodshepherdim.com/" className="block">
              <div className="relative">
                <Image
                  src="/GSIM_logo.png"
                  alt="Royal Academy of Music"
                  width={120}
                  height={30}
                  className="transform transition-transform duration-300 opacity-100 sm:w-[100px] md:w-[120px]"
                />
              </div>
              <span className="sr-only">Good Shepherd Institute Of Music</span>
            </Link>
          </div>

          <div className={`flex mt-[-.5625rem] space-x-[0.8125rem]`}>
            {/* Login/Logout Button with Enhanced Tooltip */}
            <div className={`nav-login relative transition-all duration-500 ${showElements ? 'opacity-100 translate-x-0 delay-300' : 'opacity-0 translate-x-[20px]'}`}>
              <button
                onClick={() => isLoggedIn ? handleLogout() : setShowLoginForm(!showLoginForm)}
                className="p-2 text-white hover:text-gray-200 transition-colors duration-200 group relative"
              >
                <svg 
                  width="16" 
                  height="17" 
                  viewBox="0 0 16 17" 
                  xmlns="http://www.w3.org/2000/svg" 
                  className={`transition-all duration-400 ${
                    isLoggedIn ? 'text-custom-red' : 'group-hover:text-custom-red'
                  } translate-y-1`}
                >
                  <path 
                    d="M8.29183 7.66667C10.1328 7.66667 11.6252 6.17428 11.6252 4.33333C11.6252 2.49238 10.1328 1 8.29183 1C6.45088 1 4.9585 2.49238 4.9585 4.33333C4.9585 6.17428 6.45088 7.66667 8.29183 7.66667Z" 
                    stroke="currentColor" 
                    strokeWidth="2" 
                    strokeLinecap="round" 
                    strokeLinejoin="round"
                  />
                  <path 
                    d="M14.9583 16V14.3333C14.9583 13.4493 14.6071 12.6014 13.982 11.9763C13.3569 11.3512 12.5091 11 11.625 11H4.95833C4.07428 11 3.22643 11.3512 2.60131 11.9763C1.97619 12.6014 1.625 13.4493 1.625 14.3333V16" 
                    stroke="currentColor" 
                    strokeWidth="2" 
                    strokeLinecap="round" 
                    strokeLinejoin="round"
                  />
                </svg>
                <span className="sr-only">{isLoggedIn ? 'Log out' : 'Log in'}</span>
              </button>

              {/* Enhanced Login Form Tooltip */}
              <AnimatePresence>
                {showLoginForm && !isLoggedIn && (
                  <motion.div
                    initial={{ opacity: 0, scale: 0.95, y: -10 }}
                    animate={{ opacity: 1, scale: 1, y: 0 }}
                    exit={{ opacity: 0, scale: 0.95, y: -10 }}
                    transition={{ duration: 0.2 }}
                    className="absolute right-0 mt-4 w-80 bg-white rounded-xl shadow-2xl p-6 border border-gray-100"
                  >
                    <div className="absolute -top-2 right-6 w-4 h-4 bg-white transform rotate-45 border-l border-t border-gray-100"></div>
                    <div className="space-y-4">
                      <div className="text-center mb-6">
                        <h3 className="text-lg font-semibold text-gray-800">Admin Login</h3>
                        <p className="text-sm text-gray-500">Please sign in to continue</p>
                      </div>

                      <form onSubmit={handleLogin} className="space-y-4">
                        <div className="space-y-2">
                          <div className="relative">
                            <input
                              type="email"
                              value={loginData.email}
                              onChange={(e) => setLoginData({...loginData, email: e.target.value})}
                              placeholder="Email"
                              className="w-full px-4 py-2 bg-gray-50 border border-gray-200 rounded-lg text-sm transition-all duration-200 focus:outline-none focus:border-custom-red focus:ring-2 focus:ring-custom-red focus:ring-opacity-20 placeholder-gray-400"
                            />
                          </div>
                        </div>

                        <div className="space-y-2">
                          <div className="relative">
                            <input
                              type="password"
                              value={loginData.password}
                              onChange={(e) => setLoginData({...loginData, password: e.target.value})}
                              placeholder="Password"
                              className="w-full px-4 py-2 bg-gray-50 border border-gray-200 rounded-lg text-sm transition-all duration-200 focus:outline-none focus:border-custom-red focus:ring-2 focus:ring-custom-red focus:ring-opacity-20 placeholder-gray-400"
                            />
                          </div>
                        </div>

                        {error && (
                          <p className="text-custom-red text-sm text-center">{error}</p>
                        )}

                        <button
                          type="submit"
                          disabled={isLoading}
                          className="w-full bg-custom-red text-white rounded-lg py-2.5 text-sm font-medium hover:bg-opacity-90 transition-all duration-200 relative overflow-hidden"
                        >
                          {isLoading ? (
                            <span className="inline-flex items-center">
                              <svg className="animate-spin -ml-1 mr-2 h-4 w-4 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                                <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                                <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                              </svg>
                              Processing...
                            </span>
                          ) : (
                            'Sign In'
                          )}
                        </button>
                      </form>
                    </div>
                  </motion.div>
                )}
              </AnimatePresence>
            </div>

            {/* Payment Button */}
            <div className={`nav-payment transition-all duration-500 ${showElements ? 'opacity-100 translate-x-0 delay-400' : 'opacity-0 translate-x-[20px]'}`}>
              <Link href="/payment">
                <button
                  className="p-2 text-white hover:text-gray-200 transition-colors duration-200 group"
                >
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 32 32"
                    className="w-6 h-6 transition-all duration-400 fill-current group-hover:text-custom-red"
                  >
                    <path d="M27,7H5A2,2,0,0,0,3,9V23a2,2,0,0,0,2,2H27a2,2,0,0,0,2-2V9A2,2,0,0,0,27,7ZM11,22H7a1,1,0,0,1,0-2h4a1,1,0,0,1,0,2Zm1-7a1,1,0,0,1-1,1H7a1,1,0,0,1-1-1V11a1,1,0,0,1,1-1h4a1,1,0,0,1,1,1Zm13,7H17a1,1,0,0,1,0-2h8a1,1,0,0,1,0,2Z"></path>
                  </svg>
                  <span className="sr-only">Go to payment</span>
                </button>
              </Link>
            </div>

            {/* Menu Button */}
            <div className={`nav-button transition-all duration-500 ${showElements ? 'opacity-100 translate-x-0 delay-500' : 'opacity-0 translate-x-[20px]'}`}>
              <button 
                id="globalNavToggle"
                className="p-2 text-white hover:text-gray-200 transition-colors duration-200 group"
              >
                <div className="flex flex-col space-y-1">
                  <div className="w-6 h-0.5 bg-current group-hover:bg-custom-red"></div>
                  <div className="w-6 h-0.5 bg-current group-hover:bg-custom-red"></div>
                </div>
                <span className="sr-only">Toggle menu</span>
              </button>
            </div>
          </div>
        </nav>
      </div>
    </div>
  );
};

export default Navigation;


==== File: ./src/app/components/AcademyGuideBlock.jsx ====
"use client";
import { useState, useEffect } from 'react';

export default function AcademyGuideBlock() {
  const [isVisible, setIsVisible] = useState(false);

  useEffect(() => {
    const observer = new IntersectionObserver(
      ([entry]) => {
        if (entry.isIntersecting) {
          setIsVisible(true);
          observer.unobserve(entry.target);
        }
      },
      { threshold: 0.1 }
    );

    const elements = document.querySelectorAll('[data-intersect="once"]');
    elements.forEach(el => observer.observe(el));

    return () => {
      elements.forEach(el => observer.unobserve(el));
    };
  }, []);

  return (
    <div className="bg-black text-white py-12">
      <div className="container mx-auto px-4">
        {/* Mobile/Tablet Header Section */}
        <div className="lg:hidden">
          <div className="md:ml-[8.33%] md:w-1/2">
            <h2 
              data-intersect="once"
              className={`text-5xl font-thin mb-6 transform transition-transform duration-500 ${
                isVisible ? 'translate-y-0 opacity-100' : 'translate-y-4 opacity-0'
              }`}
            >
              ACADEMY GUIDE 2025/26
            </h2>
          </div>
          <div className="hidden md:block md:ml-[8.33%] md:w-[83.33%]">
            <hr className="border-t border-white/20" />
          </div>
        </div>

        {/* Main Content */}
        <div className="flex flex-wrap">
          {/* Image Section */}
          <div className="md:w-[41.66%] md:ml-[8.33%] lg:ml-0">
            <div 
              data-intersect="once"
              className={`transform transition-opacity duration-500 ${
                isVisible ? 'opacity-100' : 'opacity-0'
              }`}
            >
              <img
                src="/kid_piano.JPG"
                alt="A montage of images depicting students playing instruments on the Academy rooftop"
                className="w-full h-auto"
              />
            </div>
          </div>

          {/* Text Content */}
          <div className="md:w-[41.66%] md:ml-[8.33%] lg:ml-[16.66%] flex flex-col lg:justify-center">
            <div 
              data-intersect="once"
              className={`md:pr-4 transform transition-transform duration-500 ${
                isVisible ? 'translate-y-0 opacity-100' : 'translate-y-4 opacity-0'
              }`}
            >
              {/* Desktop Header */}
              <h2 className="hidden lg:block text-7xl font-thin mb-12">
                ACADEMY GUIDE 2025/26
              </h2>

              {/* Main Content - Desktop/Tablet */}
              <div className="hidden md:block">
                <div className="pr-2 lg:pr-24">
                  <p className="mb-4">
                  Discover all you need to know about our community, including academic programs, admission requirements, and how you can become a part of it.
                  </p>
                </div>
                <div>
                  <ul>
                    <li>
                      <a 
                        href="/gsim-broucher.pdf"
                        className="group inline-flex items-center text-white hover:text-gray-200 transition-colors relative"
                      >
                        <span className="mr-2">DOWNLOAD THE ACADEMY GUIDE</span>
                        <div className="transform transition-transform group-hover:translate-y-0.5">
                          <svg 
                            viewBox="0 0 18 18" 
                            className="w-4 h-4 text-custom-red group-hover:hidden"
                          >
                            <path 
                              fill="currentcolor" 
                              fillRule="evenodd" 
                              stroke="currentcolor" 
                              strokeWidth=".5" 
                              d="M7.71718345,0 L7.71718345,12.1272101 L5.24727719,8.28258915 L4.57511027,8.28258915 L8.00022475,13.6141744 L11.4248897,8.28258915 L10.7527228,8.28258915 L8.28281655,12.1276596 L8.28281655,0 L7.71718345,0 Z M0,16 L16,16 L16,15.4343722 L0,15.4343722 L0,16 Z" 
                              transform="translate(1 1)"
                            />
                          </svg>
                        </div>
                        {/* Underline effect */}
                        <span className="absolute bottom-0 left-0 w-0 h-0.25 bg-custom-red transition-all duration-30 group-hover:w-full"></span>
                      </a>
                    </li>
                  </ul>
                </div>
              </div>
            </div>
          </div>
        </div>

        {/* Mobile Content Section */}
        <div className="sm:block md:hidden">
          <div 
            data-intersect="once"
            className={`lg:w-1/2 lg:ml-[8.33%] transform transition-transform duration-500 ${
              isVisible ? 'translate-y-0 opacity-100' : 'translate-y-4 opacity-0'
            }`}
          >
            <div className="pr-2 lg:pr-24">
              <p className="mb-4">
              Discover all you need to know about our community, including academic programs, admission requirements, and how you can become a part of it.
              </p>
            </div>
            <div>
              <ul>
                <li>
                  <a 
                    href="/gsim-broucher.pdf"
                    className="group inline-flex items-center text-white hover:text-gray-200 transition-colors relative"
                  >
                    <span className="mr-2">DOWNLOAD THE ACADEMY GUIDE</span>
                    <div className="transform transition-transform group-hover:translate-y-0.5">
                      <svg 
                        viewBox="0 0 18 18" 
                        className="w-4 h-4 text-custom-red group-hover:hidden"
                      >
                        <path 
                          fill="currentcolor" 
                          fillRule="evenodd" 
                          stroke="currentcolor" 
                          strokeWidth=".5" 
                          d="M7.71718345,0 L7.71718345,12.1272101 L5.24727719,8.28258915 L4.57511027,8.28258915 L8.00022475,13.6141744 L11.4248897,8.28258915 L10.7527228,8.28258915 L8.28281655,12.1276596 L8.28281655,0 L7.71718345,0 Z M0,16 L16,16 L16,15.4343722 L0,15.4343722 L0,16 Z" 
                          transform="translate(1 1)"
                        />
                      </svg>
                    </div>
                    {/* Underline effect */}
                    <span className="absolute bottom-0 left-0 w-0 h-0.25 bg-custom-red transition-all duration-300 group-hover:w-full"></span>
                  </a>
                </li>
              </ul>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}



==== File: ./src/app/components/FooterBottom.jsx ====
import React from 'react';
import Link from 'next/link';
import Image from 'next/image';

const FooterBottom = () => {
  return (
    <div className="w-full text-white bg-black">
      <div className="flex flex-col items-center py-8">
        {/* Logo */}
        <Link href="https://goodshepherdim.com/" className="mb-8">
          <Image
            src="/logo-wide-2x.png"
            alt="Royal Academy of Music"
            width={300}
            height={60}
            className="h-12 w-auto"
          />
          <span className="sr-only">Royal Academy of Music</span>
        </Link>

        {/* Address and Details */}
        <div className="text-center mb-8">
          <address className="mb-6 not-italic">
            Good Shepherd Institute Of Music <br />
            No. 33, Sankarapuram Main Road, Sankarapuram, Sithalapakkam, Chennai, Tamil Nadu
          </address>

          <div className="flex flex-col md:flex-row justify-center gap-8">
            <div className="text-center mb-6 md:mb-0">
              <h6 className="text-sm font-bold mb-1">Telephone</h6>
              <p className="m-0">
                <a href="tel:+919884556997" className="text-white">+91 98845 56997</a>
              </p>
              <p className="m-0">
                <a href="tel:+9198939396179" className="text-white">+91 89393 96179</a>
              </p>
            </div>
            <div className="text-center">
              <h6 className="text-sm font-bold mb-1">Mail to</h6>
              <p className="m-0">
                <a
                  href="mailto:goodshepherdim@gmail.com"
                  className="relative text-white font-bold group"
                >
                  goodshepherdim@gmail.com
                  <span className="absolute left-0 bottom-0 block w-0 h-0.25 bg-custom-red transition-all duration-300 group-hover:w-full"></span>
                </a>
              </p>
            </div>
          </div>
        </div>

        {/* Crest Logo */}
        <div className="mb-4">
          <Image
            src="/GSIM_only_logo.png"
            alt="Royal Academy of Music"
            width={80}
            height={80}
            className="w-20 h-auto"
          />
        </div>
      </div>
    </div>
  );
};

export default FooterBottom;


==== File: ./src/app/components/AdmissionsBlock.jsx ====
"use client";
import { Music } from 'lucide-react';
import { useState, useEffect } from 'react';
import MusicRegistrationForm from './MusicRegistrationForm';

export default function AdmissionsBlock() {
  const [isVisible, setIsVisible] = useState(false);

  useEffect(() => {
    const observer = new IntersectionObserver(
      ([entry]) => {
        if (entry.isIntersecting) {
          setIsVisible(true);
          observer.unobserve(entry.target);
        }
      },
      { threshold: 0.1 }
    );

    const elements = document.querySelectorAll('[data-intersect="once"]');
    elements.forEach(el => observer.observe(el));

    return () => {
      elements.forEach(el => observer.unobserve(el));
    };
  }, []);

  return (
    <div className="bg-white py-16">
      <div className="container mx-auto px-4">
        <div className="flex flex-col lg:flex-row gap-8">
          {/* Left Column (Heading + Form) */}
          <div className="w-full lg:w-1/2 order-2 lg:order-1">
            {/* Heading - Always visible, responsive size */}
            <h2 
              data-intersect="once"
              className={`text-4xl md:text-5xl lg:text-7xl text-custom-red font-thin mb-6 transform transition-transform duration-500 ${
                isVisible ? 'translate-y-0 opacity-100' : 'translate-y-4 opacity-0'
              }`}
            >
              ADMISSIONS
            </h2>
            
            {/* Form */}
            <div 
              data-intersect="once"
              className={`transform transition-transform duration-500 ${
                isVisible ? 'translate-y-0 opacity-100' : 'translate-y-4 opacity-0'
              }`}
            >
              <MusicRegistrationForm />
            </div>
          </div>

          {/* Right Column (Image) */}
          <div className="w-full lg:w-1/2 order-1 lg:order-2">
            <div 
              data-intersect="once"
              className={`transform transition-opacity duration-500 ${
                isVisible ? 'opacity-100' : 'opacity-0'
              }`}
            >
              <img
                src="https://supercool-ram.transforms.svdcdn.com/production/auditions.jpg?w=1024&q=90&auto=format&fit=crop&crop=focalpoint&fp-x=0.5&fp-y=0.5&dm=1728916365&s=1291259c3c06b6c46fdcb8b5609ca4ba"
                alt="Admissions"
                className="w-full h-auto grayscale"
              />
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}


==== File: ./src/app/components/AlumniBlock.jsx ====
import React from 'react';
import Image from 'next/image';
import Link from 'next/link';

const AlumniBlock = () => {
  return (
    <div className="bg-black py-16">
      <div className="container mx-auto px-4">
        {/* Top Image Row */}
        <div className="hidden lg:flex">
          <div className="w-2/12 ml-[8.333%]">
            <div className="relative aspect-[7/8]">
              <Image
                src="/Evelyn-Glennie-Headshot.jpg"
                alt=""
                fill
                className="object-cover"
              />
            </div>
          </div>
          <div className="w-2/12 ml-[58.333%]">
            <div className="relative aspect-[7/8]">
              <Image
                src="/Alexis-Ffrench-100.jpg"
                alt=""
                fill
                className="object-cover"
              />
            </div>
          </div>
        </div>

        {/* Header Row */}
        <div className="flex flex-wrap">
          <div className="lg:w-4/12">
            <div className="mb-8 lg:mb-0">
              <h2 className="text-white text-6xl md:text-7xl font-display">
                Follow 
                {/* <span className="block lg:inline">Their Lead</span>*/}
              </h2>
            </div>
          </div>
          <div className="lg:w-4/12">
            <div className="relative aspect-[7/8]">
              <Image
                src="/Jacob-Collier-Headshot.jpg"
                alt=""
                fill
                className="object-cover"
              />
            </div>
          </div>
          <div className="lg:w-4/12 hidden lg:block">
            <div className="flex items-start">
              <h2 className="text-white text-6xl md:text-7xl font-display" aria-hidden="true">
                Their Lead
              </h2>
            </div>
          </div>
        </div>

        {/* Content and Bottom Images Row */}
        <div className="flex flex-wrap mt-8">
          {/* Content Section */}
          <div className="w-full lg:w-6/12 lg:ml-[8.333%] order-2 lg:order-1">
            <div className="text-white mb-8">
              <p className="text-xl">Academy alumni shape musical culture in countless ways.</p>
            </div>
            
            {/* Desktop Links */}
            <ul className="hidden lg:flex space-x-8">
              <li>
                <Link href="/alumni/alumni-portal" className="text-white hover:underline">
                  Alumni Portal
                </Link>
              </li>
              <li>
                <Link href="/alumni/meet-our-alumni" className="text-white hover:underline">
                  Meet our alumni
                </Link>
              </li>
              <li>
                <Link href="/alumni/alumni-benefits" className="text-white hover:underline">
                  Alumni benefits
                </Link>
              </li>
            </ul>
          </div>

          {/* Bottom Images */}
          <div className="w-4/12 lg:w-2/12 order-1 lg:order-2">
            <div className="relative aspect-[7/8]">
              <Image
                src="/chloeflower-officialheadshot_720.jpg"
                alt=""
                fill
                className="object-cover"
              />
            </div>
          </div>
          <div className="w-8/12 lg:w-2/12 order-1 lg:order-3">
            <div className="relative aspect-[7/8]">
              <Image
                src="/RATTLE-Simon-Oliver-Helbig_2023-09-27-115006_pplb.jpg"
                alt=""
                fill
                className="object-cover"
              />
            </div>
          </div>
        </div>

        {/* Mobile Link */}
        <div className="flex justify-center my-8 lg:hidden">
          <Link href="/alumni" className="text-white hover:underline">
            our alumni
          </Link>
        </div>
      </div>
    </div>
  );
};

export default AlumniBlock;


==== File: ./src/app/globals.css ====
@tailwind base;
@tailwind components;
@tailwind utilities;

@layer components {
  .gradient::before {
    content: " ";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 21.875rem; /* Adjust this height if necessary */
    background: linear-gradient(to bottom, #000 0%, transparent 100%);
    z-index: 10; /* Ensures it stays behind content */
  }
}

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 240 10% 3.9%;
    --card: 0 0% 100%;
    --card-foreground: 240 10% 3.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 240 10% 3.9%;
    --primary: 240 5.9% 10%;
    --primary-foreground: 0 0% 98%;
    --secondary: 240 4.8% 95.9%;
    --secondary-foreground: 240 5.9% 10%;
    --muted: 240 4.8% 95.9%;
    --muted-foreground: 240 3.8% 46.1%;
    --accent: 240 4.8% 95.9%;
    --accent-foreground: 240 5.9% 10%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;
    --border: 240 5.9% 90%;
    --input: 240 5.9% 90%;
    --ring: 240 10% 3.9%;
    --chart-1: 12 76% 61%;
    --chart-2: 173 58% 39%;
    --chart-3: 197 37% 24%;
    --chart-4: 43 74% 66%;
    --chart-5: 27 87% 67%;
    --radius: 0.5rem}
  .dark {
    --background: 240 10% 3.9%;
    --foreground: 0 0% 98%;
    --card: 240 10% 3.9%;
    --card-foreground: 0 0% 98%;
    --popover: 240 10% 3.9%;
    --popover-foreground: 0 0% 98%;
    --primary: 0 0% 98%;
    --primary-foreground: 240 5.9% 10%;
    --secondary: 240 3.7% 15.9%;
    --secondary-foreground: 0 0% 98%;
    --muted: 240 3.7% 15.9%;
    --muted-foreground: 240 5% 64.9%;
    --accent: 240 3.7% 15.9%;
    --accent-foreground: 0 0% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;
    --border: 240 3.7% 15.9%;
    --input: 240 3.7% 15.9%;
    --ring: 240 4.9% 83.9%;
    --chart-1: 220 70% 50%;
    --chart-2: 160 60% 45%;
    --chart-3: 30 80% 55%;
    --chart-4: 280 65% 60%;
    --chart-5: 340 75% 55%}
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}



==== File: ./src/components/ui/form.jsx ====
"use client";
import * as React from "react"
import { Slot } from "@radix-ui/react-slot"
import { Controller, FormProvider, useFormContext } from "react-hook-form";

import { cn } from "@/lib/utils"
import { Label } from "@/components/ui/label"

const Form = FormProvider

const FormFieldContext = React.createContext({})

const FormField = (
  {
    ...props
  }
) => {
  return (
    (<FormFieldContext.Provider value={{ name: props.name }}>
      <Controller {...props} />
    </FormFieldContext.Provider>)
  );
}

const useFormField = () => {
  const fieldContext = React.useContext(FormFieldContext)
  const itemContext = React.useContext(FormItemContext)
  const { getFieldState, formState } = useFormContext()

  const fieldState = getFieldState(fieldContext.name, formState)

  if (!fieldContext) {
    throw new Error("useFormField should be used within <FormField>")
  }

  const { id } = itemContext

  return {
    id,
    name: fieldContext.name,
    formItemId: `${id}-form-item`,
    formDescriptionId: `${id}-form-item-description`,
    formMessageId: `${id}-form-item-message`,
    ...fieldState,
  }
}

const FormItemContext = React.createContext({})

const FormItem = React.forwardRef(({ className, ...props }, ref) => {
  const id = React.useId()

  return (
    (<FormItemContext.Provider value={{ id }}>
      <div ref={ref} className={cn("space-y-2", className)} {...props} />
    </FormItemContext.Provider>)
  );
})
FormItem.displayName = "FormItem"

const FormLabel = React.forwardRef(({ className, ...props }, ref) => {
  const { error, formItemId } = useFormField()

  return (
    (<Label
      ref={ref}
      className={cn(error && "text-destructive", className)}
      htmlFor={formItemId}
      {...props} />)
  );
})
FormLabel.displayName = "FormLabel"

const FormControl = React.forwardRef(({ ...props }, ref) => {
  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()

  return (
    (<Slot
      ref={ref}
      id={formItemId}
      aria-describedby={
        !error
          ? `${formDescriptionId}`
          : `${formDescriptionId} ${formMessageId}`
      }
      aria-invalid={!!error}
      {...props} />)
  );
})
FormControl.displayName = "FormControl"

const FormDescription = React.forwardRef(({ className, ...props }, ref) => {
  const { formDescriptionId } = useFormField()

  return (
    (<p
      ref={ref}
      id={formDescriptionId}
      className={cn("text-[0.8rem] text-muted-foreground", className)}
      {...props} />)
  );
})
FormDescription.displayName = "FormDescription"

const FormMessage = React.forwardRef(({ className, children, ...props }, ref) => {
  const { error, formMessageId } = useFormField()
  const body = error ? String(error?.message) : children

  if (!body) {
    return null
  }

  return (
    (<p
      ref={ref}
      id={formMessageId}
      className={cn("text-[0.8rem] font-medium text-destructive", className)}
      {...props}>
      {body}
    </p>)
  );
})
FormMessage.displayName = "FormMessage"

export {
  useFormField,
  Form,
  FormItem,
  FormLabel,
  FormControl,
  FormDescription,
  FormMessage,
  FormField,
}



==== File: ./src/components/ui/input.jsx ====
import * as React from "react"

import { cn } from "@/lib/utils"

const Input = React.forwardRef(({ className, type, ...props }, ref) => {
  return (
    (<input
      type={type}
      className={cn(
        "flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm",
        className
      )}
      ref={ref}
      {...props} />)
  );
})
Input.displayName = "Input"

export { Input }



==== File: ./src/components/ui/select.jsx ====
"use client"

import * as React from "react"
import * as SelectPrimitive from "@radix-ui/react-select"
import { Check, ChevronDown, ChevronUp } from "lucide-react"

import { cn } from "@/lib/utils"

const Select = SelectPrimitive.Root

const SelectGroup = SelectPrimitive.Group

const SelectValue = SelectPrimitive.Value

const SelectTrigger = React.forwardRef(({ className, children, ...props }, ref) => (
  <SelectPrimitive.Trigger
    ref={ref}
    className={cn(
      "flex h-9 w-full items-center justify-between whitespace-nowrap rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-1 focus:ring-ring disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
      className
    )}
    {...props}>
    {children}
    <SelectPrimitive.Icon asChild>
      <ChevronDown className="h-4 w-4 opacity-50" />
    </SelectPrimitive.Icon>
  </SelectPrimitive.Trigger>
))
SelectTrigger.displayName = SelectPrimitive.Trigger.displayName

const SelectScrollUpButton = React.forwardRef(({ className, ...props }, ref) => (
  <SelectPrimitive.ScrollUpButton
    ref={ref}
    className={cn("flex cursor-default items-center justify-center py-1", className)}
    {...props}>
    <ChevronUp className="h-4 w-4" />
  </SelectPrimitive.ScrollUpButton>
))
SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName

const SelectScrollDownButton = React.forwardRef(({ className, ...props }, ref) => (
  <SelectPrimitive.ScrollDownButton
    ref={ref}
    className={cn("flex cursor-default items-center justify-center py-1", className)}
    {...props}>
    <ChevronDown className="h-4 w-4" />
  </SelectPrimitive.ScrollDownButton>
))
SelectScrollDownButton.displayName =
  SelectPrimitive.ScrollDownButton.displayName

const SelectContent = React.forwardRef(({ className, children, position = "popper", ...props }, ref) => (
  <SelectPrimitive.Portal>
    <SelectPrimitive.Content
      ref={ref}
      className={cn(
        "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
        position === "popper" &&
          "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
        className
      )}
      position={position}
      {...props}>
      <SelectScrollUpButton />
      <SelectPrimitive.Viewport
        className={cn("p-1", position === "popper" &&
          "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]")}>
        {children}
      </SelectPrimitive.Viewport>
      <SelectScrollDownButton />
    </SelectPrimitive.Content>
  </SelectPrimitive.Portal>
))
SelectContent.displayName = SelectPrimitive.Content.displayName

const SelectLabel = React.forwardRef(({ className, ...props }, ref) => (
  <SelectPrimitive.Label
    ref={ref}
    className={cn("px-2 py-1.5 text-sm font-semibold", className)}
    {...props} />
))
SelectLabel.displayName = SelectPrimitive.Label.displayName

const SelectItem = React.forwardRef(({ className, children, ...props }, ref) => (
  <SelectPrimitive.Item
    ref={ref}
    className={cn(
      "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-2 pr-8 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      className
    )}
    {...props}>
    <span className="absolute right-2 flex h-3.5 w-3.5 items-center justify-center">
      <SelectPrimitive.ItemIndicator>
        <Check className="h-4 w-4" />
      </SelectPrimitive.ItemIndicator>
    </span>
    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
  </SelectPrimitive.Item>
))
SelectItem.displayName = SelectPrimitive.Item.displayName

const SelectSeparator = React.forwardRef(({ className, ...props }, ref) => (
  <SelectPrimitive.Separator
    ref={ref}
    className={cn("-mx-1 my-1 h-px bg-muted", className)}
    {...props} />
))
SelectSeparator.displayName = SelectPrimitive.Separator.displayName

export {
  Select,
  SelectGroup,
  SelectValue,
  SelectTrigger,
  SelectContent,
  SelectLabel,
  SelectItem,
  SelectSeparator,
  SelectScrollUpButton,
  SelectScrollDownButton,
}



==== File: ./src/components/ui/button.jsx ====
import * as React from "react"
import { Slot } from "@radix-ui/react-slot"
import { cva } from "class-variance-authority";

import { cn } from "@/lib/utils"

const buttonVariants = cva(
  "inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",
  {
    variants: {
      variant: {
        default:
          "bg-primary text-primary-foreground shadow hover:bg-primary/90",
        destructive:
          "bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90",
        outline:
          "border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground",
        secondary:
          "bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80",
        ghost: "hover:bg-accent hover:text-accent-foreground",
        link: "text-primary underline-offset-4 hover:underline",
      },
      size: {
        default: "h-9 px-4 py-2",
        sm: "h-8 rounded-md px-3 text-xs",
        lg: "h-10 rounded-md px-8",
        icon: "h-9 w-9",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
)

const Button = React.forwardRef(({ className, variant, size, asChild = false, ...props }, ref) => {
  const Comp = asChild ? Slot : "button"
  return (
    (<Comp
      className={cn(buttonVariants({ variant, size, className }))}
      ref={ref}
      {...props} />)
  );
})
Button.displayName = "Button"

export { Button, buttonVariants }



==== File: ./src/components/ui/phone-input.jsx ====
"use client"

import * as React from "react"
import { Input } from "@/components/ui/input"
import PhoneInputWithCountry from "react-phone-number-input"

import "react-phone-number-input/style.css"

const PhoneInput = React.forwardRef((props, ref) => {
  return (
    <PhoneInputWithCountry
      {...props}
      international
      countryCallingCodeEditable={false}
      defaultCountry="US"
      className="flex"
      inputComponent={Input}
    />
  )
})
PhoneInput.displayName = "PhoneInput"

export { PhoneInput }


==== File: ./src/components/ui/label.jsx ====
"use client"

import * as React from "react"
import * as LabelPrimitive from "@radix-ui/react-label"
import { cva } from "class-variance-authority";

import { cn } from "@/lib/utils"

const labelVariants = cva(
  "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
)

const Label = React.forwardRef(({ className, ...props }, ref) => (
  <LabelPrimitive.Root ref={ref} className={cn(labelVariants(), className)} {...props} />
))
Label.displayName = LabelPrimitive.Root.displayName

export { Label }



==== File: ./src/lib/utils.js ====
import { clsx } from "clsx";
import { twMerge } from "tailwind-merge"

export function cn(...inputs) {
  return twMerge(clsx(inputs));
}



==== File: ./src/pages/api/register.js ====
// src/pages/api/register.js

import { MongoClient } from 'mongodb';

const MONGO_URI = 'mongodb://localhost:27017/gsimDB'; // Use your actual connection string

// MongoDB connection setup
async function connectToDatabase() {
  const client = new MongoClient(MONGO_URI);
  if (!client.isConnected()) {
    await client.connect();
  }
  const db = client.db(); // 'gsimDB' is used by default
  return db;
}

export default async function handler(req, res) {
  if (req.method === 'POST') {
    try {
      const db = await connectToDatabase();
      const admissionsCollection = db.collection('admissions');
      
      const { id } = req.body;
      if (!id) {
        return res.status(400).json({ message: 'ID is required.' });
      }

      const newAdmission = {
        id,
        timestamp: new Date(),
      };

      const result = await admissionsCollection.insertOne(newAdmission);

      res.status(201).json({
        message: 'Admission registered successfully.',
        result,
      });
    } catch (error) {
      console.error(error);
      res.status(500).json({ message: 'Failed to register admission.' });
    }
  } else {
    // If method is not POST
    res.status(405).json({ message: 'Method Not Allowed' });
  }
}



==== File: jsconfig.json ====
{
  "compilerOptions": {
    "baseUrl": ".",
    "paths": {
      "@/*": ["./src/*"]
    }
  }
}



==== File: next.config.mjs ====
/** @type {import('next').NextConfig} */
const nextConfig = {
    images: {
      domains: ['supercool-ram.transforms.svdcdn.com'], // Add the domain here
    },
  };
export default nextConfig;



==== File: package.json ====
{
  "name": "good_shepherd",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev --turbopack",
    "build": "next build",
    "start": "next start",
    "lint": "next lint"
  },
  "dependencies": {
    "@hookform/resolvers": "^3.10.0",
    "@radix-ui/react-label": "^2.1.1",
    "@radix-ui/react-select": "^2.1.4",
    "@radix-ui/react-slot": "^1.1.1",
    "@shadcn/ui": "^0.0.4",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "embla-carousel-react": "^8.5.2",
    "framer-motion": "^12.0.6",
    "lucide-react": "^0.472.0",
    "next": "15.1.4",
    "react": "19.0.0-rc-66855b96-20241106",
    "react-dom": "19.0.0-rc-66855b96-20241106",
    "react-hook-form": "^7.54.2",
    "react-phone-input-2": "^2.15.1",
    "react-phone-number-input": "^3.4.11",
    "sonner": "^1.7.2",
    "swiper": "^11.2.1",
    "tailwind-merge": "^2.6.0",
    "tailwindcss-animate": "^1.0.7",
    "zod": "^3.24.1"
  },
  "devDependencies": {
    "postcss": "^8",
    "tailwindcss": "^3.4.1"
  }
}



==== File: postcss.config.mjs ====
/** @type {import('postcss-load-config').Config} */
const config = {
  plugins: {
    tailwindcss: {},
  },
};

export default config;



==== File: tailwind.config.js ====
/** @type {import('tailwindcss').Config} */
module.exports = {
    darkMode: ["class"],
    content: [
    "./src/pages/**/*.{js,ts,jsx,tsx,mdx}",
    "./src/components/**/*.{js,ts,jsx,tsx,mdx}",
    "./src/app/**/*.{js,ts,jsx,tsx,mdx}",
  ],
  theme: {
  	extend: {
  		colors: {
  			background: 'hsl(var(--background))',
  			foreground: 'hsl(var(--foreground))',
  			'custom-red': '#f92d44',
  			card: {
  				DEFAULT: 'hsl(var(--card))',
  				foreground: 'hsl(var(--card-foreground))'
  			},
  			popover: {
  				DEFAULT: 'hsl(var(--popover))',
  				foreground: 'hsl(var(--popover-foreground))'
  			},
  			primary: {
  				DEFAULT: 'hsl(var(--primary))',
  				foreground: 'hsl(var(--primary-foreground))'
  			},
  			secondary: {
  				DEFAULT: 'hsl(var(--secondary))',
  				foreground: 'hsl(var(--secondary-foreground))'
  			},
  			muted: {
  				DEFAULT: 'hsl(var(--muted))',
  				foreground: 'hsl(var(--muted-foreground))'
  			},
  			accent: {
  				DEFAULT: 'hsl(var(--accent))',
  				foreground: 'hsl(var(--accent-foreground))'
  			},
  			destructive: {
  				DEFAULT: 'hsl(var(--destructive))',
  				foreground: 'hsl(var(--destructive-foreground))'
  			},
  			border: 'hsl(var(--border))',
  			input: 'hsl(var(--input))',
  			ring: 'hsl(var(--ring))',
  			chart: {
  				'1': 'hsl(var(--chart-1))',
  				'2': 'hsl(var(--chart-2))',
  				'3': 'hsl(var(--chart-3))',
  				'4': 'hsl(var(--chart-4))',
  				'5': 'hsl(var(--chart-5))'
  			}
  		},
  		borderRadius: {
  			lg: 'var(--radius)',
  			md: 'calc(var(--radius) - 2px)',
  			sm: 'calc(var(--radius) - 4px)'
  		},
		height: {
			'0.25': '0.75px',
		}
  	}
  },
  plugins: [require("tailwindcss-animate")],
};



